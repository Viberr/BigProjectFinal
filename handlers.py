# handlers.py
import telebot
from telebot import types
from database import add_user
from recommendations import get_recommendations
 

users = {}

def send_welcome(message, bot):
    bot.reply_to(message, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã–π –∫–∞—Ä—å–µ—Ä–Ω—ã–π –ø—É—Ç—å. –î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º –Ω–∞—à–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∫ —É—Å–ø–µ—Ö—É!")
    show_main_menu(message.chat.id, bot)

def show_main_menu(chat_id, bot):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–ù–∞—á–∞—Ç—å", "–ü–æ–º–æ—â—å", "–ü—Ä–æ—Ñ–∏–ª—å", "–ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏")
    bot.send_message(chat_id, "‚ú® –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=markup)

def start_interview(chat_id, bot):
    msg = bot.send_message(chat_id, "üí¨ –°–Ω–∞—á–∞–ª–∞ —Å–∫–∞–∂–∏, –∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    bot.register_next_step_handler(msg, lambda m: process_name_step(m, bot))

def process_name_step(message, bot):
    name = message.text
    users[message.chat.id] = {'name': name}
    msg = bot.send_message(message.chat.id, "üóìÔ∏è –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
    bot.register_next_step_handler(msg, lambda m: process_age_step(m, bot))

def process_age_step(message, bot):
    age = message.text
    users[message.chat.id]['age'] = age
    msg = bot.send_message(message.chat.id, "üíº –ö–∞–∫–∏–µ —É —Ç–µ–±—è –µ—Å—Ç—å –Ω–∞–≤—ã–∫–∏? –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—á–∏—Å–ª–∏ –∏—Ö —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, –¥–∏–∑–∞–π–Ω).")
    bot.register_next_step_handler(msg, lambda m: process_skills_step(m, bot))

def process_skills_step(message, bot):
    skills = message.text
    users[message.chat.id]['skills'] = skills
    msg = bot.send_message(message.chat.id, "üè¢ –ö–∞–∫–æ–π —Ç–∏–ø —Ä–∞–±–æ—Ç—ã —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? –ù–∞–ø—Ä–∏–º–µ—Ä, —É–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –∏–ª–∏ —Ä–∞–±–æ—Ç–∞ –≤ –æ—Ñ–∏—Å–µ.")
    #handle_invalid_request(skills)
    bot.register_next_step_handler(msg, lambda m: process_job_type_step(m, bot))

def process_job_type_step(message, bot):
    job_type = message.text
    users[message.chat.id]['job_type'] = job_type
    msg = bot.send_message(message.chat.id, "üë• –ö–∞–∫–æ–π —Å—Ç–∏–ª—å —Ä–∞–±–æ—Ç—ã —Ç–µ–±–µ –±–æ–ª—å—à–µ –ø–æ–¥—Ö–æ–¥–∏—Ç? –ù–∞–ø—Ä–∏–º–µ—Ä, —Ä–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ –∏–ª–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞.")
    #handle_invalid_request(job_type)
    bot.register_next_step_handler(msg, lambda m: process_work_style_step(m, bot))

def process_work_style_step(message, bot):
    work_style = message.text
    users[message.chat.id]['work_style'] = work_style
    msg = bot.send_message(message.chat.id, "üé® –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –∫–∞–∫–∏–µ-–ª–∏–±–æ —Ö–æ–±–±–∏ –∏–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω—ã —Å —Ä–∞–±–æ—Ç–æ–π? –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–ø–æ—Ä—Ç, –º—É–∑—ã–∫–∞ –∏–ª–∏ –∏—Å–∫—É—Å—Å—Ç–≤–æ.")
    #handle_invalid_request(work_style)
    bot.register_next_step_handler(msg, lambda m: process_hobbies_step(m, bot))

def process_hobbies_step(message, bot):
    hobbies = message.text
    users[message.chat.id]['hobbies'] = hobbies

    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–µ –≤ –ë–î
    add_user(
        users[message.chat.id]['name'],
        users[message.chat.id]['age'],
        users[message.chat.id]['skills'],
        users[message.chat.id]['job_type'],
        users[message.chat.id]['work_style'],
        users[message.chat.id]['hobbies']
    )

    recommend_careers(message.chat.id, bot)

def recommend_careers(chat_id, bot):
    user_info = users[chat_id]
    recommendations = get_recommendations(user_info)

    if recommendations:
        rec_text = "üåü –ù–∞ –æ—Å–Ω–æ–≤–µ —Ç–≤–æ–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤, —è –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞—Ä—å–µ—Ä–Ω—ã–µ –ø—É—Ç–∏:\n\n" + "\n - ".join(recommendations)
    else:
        rec_text = "‚ùó –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ –∏ —Ç–æ—á–Ω–æ!"

    bot.send_message(chat_id, rec_text)
    additional_options(chat_id, bot)

def additional_options(chat_id, bot):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üåà –ü–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π", "–ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç—ã", "‚ùå –ó–∞–∫–æ–Ω—á–∏—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä")
    bot.send_message(chat_id, "ü§î –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?", reply_markup=markup)


def handle_text(message, bot):
    if message.text == "–ù–∞—á–∞—Ç—å":
        start_interview(message.chat.id, bot)
    elif message.text == "–ü–æ–º–æ—â—å":
        bot.send_message(message.chat.id, "üÜò –Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å –ø–æ–∏—Å–∫–æ–º –ø–æ–¥—Ö–æ–¥—è—â–µ–π –∫–∞—Ä—å–µ—Ä—ã. –ü—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤!")
    elif message.text == "üåà –ü–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π":
        recommend_careers(message.chat.id, bot)  # –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    elif message.text == "–ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç—ã":
        bot.send_message(message.chat.id, "üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ, –≤—ã–±—Ä–∞–≤ ¬´–ù–∞—á–∞—Ç—å¬ª –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.")
        show_main_menu(message.chat.id, bot)
    elif message.text == "–ü—Ä–æ—Ñ–∏–ª—å":
        user = users.get(message.chat.id)
        if user:
            profile_info = f"üë§ –ò–º—è: {user['name']}\nüìÖ –í–æ–∑—Ä–∞—Å—Ç: {user['age']}\nüíº –ù–∞–≤—ã–∫–∏: {user['skills']}\nüè¢ –¢–∏–ø —Ä–∞–±–æ—Ç—ã: {user['job_type']}\nüë• –°—Ç–∏–ª—å —Ä–∞–±–æ—Ç—ã: {user['work_style']}\nüé® –•–æ–±–±–∏: {user['hobbies']}"
            bot.send_message(message.chat.id, profile_info)
        else:
            bot.send_message(message.chat.id, "‚ùó –ü—Ä–æ—Ñ–∏–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å ¬´–ù–∞—á–∞—Ç—å¬ª.")
    elif message.text == "–ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏":
        bot.send_message(message.chat.id, "üìß –í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –ø–æ –∞–¥—Ä–µ—Å—É: support@example.com")
    elif message.text == "‚ùå –ó–∞–∫–æ–Ω—á–∏—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä":
        bot.send_message(message.chat.id, "üôè –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—â–µ–Ω–∏–µ! –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–µ–Ω —Å–æ–≤–µ—Ç, –≤—Å–µ–≥–¥–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞.")
        show_main_menu(message.chat.id, bot)  # –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    else:
        bot.send_message(message.chat.id, "ü§î –Ø –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –º–µ–Ω—é.")

#–†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨
#def handle_invalid_request (message, bot):
    #if message.text not in get_recommendations:
        #bot.send_message(message.chat.id, "ü§î –Ø –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª. –í–æ–∑–º–æ–∂–Ω–æ –≤—ã —Å–æ–≤–µ—Ä—à–∏–ª–∏ –æ—à–∏–±–∫—É –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏, –ª–∏–±–æ —Ç–∞–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –µ—â—ë –Ω–µ—Ç—É –≤ –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ")

    
    

